name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  frontend-check:
    name: "Frontend Check"
    runs-on: ubuntu-latest

    steps:
      -   name: Checkout
          uses: actions/checkout@v3

      -   name: Build Docker image
          run: docker build -t frontend-dev . --target frontend-dev

      -   name: Run Svelte Check
          run: docker run frontend-dev npm run check

      -   name: Debug Svelte-check
          run: |
            docker run --rm frontend-dev sh -c 'echo "workdir: $(pwd)"'

            docker run --rm frontend-dev sh -c '
              echo "number of .svelte files: $(find src -name \"*.svelte\" | wc -l)"
              find src -name "*.svelte" | head -10
            '

            docker run --rm frontend-dev sh -c 'echo "\ntsconfig.json:"; cat tsconfig.json'

            docker run --rm frontend-dev sh -c '
              npx svelte-kit sync
              echo "\n.svelte-kit/tsconfig.json (first 30 lines):"
              head -30 .svelte-kit/tsconfig.json
            '

            docker run --rm frontend-dev sh -c '
              npx svelte-check --tsconfig ./tsconfig.json --verbose | head -40

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest

    steps:
      -   name: Checkout
          uses: actions/checkout@v2

      -   name: Build Docker image
          run: docker build -t backend-dev . --target backend-dev

      -   name: Run PHPStan
          run: |
            docker run backend-dev \
              sh -c "bin/console cache:warmup && ./vendor/bin/phpstan analyse --memory-limit=1G --ansi"

  phpunit:
    name: "PHPUnit tests"
    runs-on: ubuntu-latest

    steps:
      -   name: Checkout
          uses: actions/checkout@v3

      -   name: Set up services
          run: |
            docker network create ci
            docker compose -f meta/ci/compose.ci.yaml up -d

      -   name: Build Docker image
          run: docker build -t backend-dev . --target backend-dev

      -   name: Run PHP Tests
          run: |
            docker run \
            --network ci \
            -e APP_ENV=test \
            backend-dev sh -c "
            php bin/console doctrine:migrations:migrate --no-interaction &&
            ./vendor/bin/phpunit"
